using System;
using System.Collections.Generic;

public interface IBankAccount
{
    void Deposit(int amount);
    void Withdraw(int amount);

}
public abstract class BankAccount : IBankAccount
{
    protected string AccountNumber { get; set; }
    protected string AccountHolderName { get; set; }
    protected double Balance { get; set; }

    public BankAccount(string accountnumber,string accountholdername,double balance)
    {
        AccountNumber = accountnumber;
        AccountHolderName = accountholdername;
        Balance = balance;
    }
    public abstract void Deposit(int amount);

    public abstract void Withdraw(int amount);

    public abstract void DisplayAccountInfo();
  public string GetAccountNumber()
    {
        return AccountNumber;
    }


}
public class SavingsAccount : BankAccount
{
    public SavingsAccount(string accountnumber, string accountholdername, double balance, double interestRate) : base(accountnumber, accountholdername, balance)
    {
        InterestRate = interestRate;
    }
    private double InterestRate { get; set; }


    public override void Deposit(int amount)
    {
        Balance += amount;
        CalculateInterest();
    }

    private void CalculateInterest()
    {
        Balance += Balance * InterestRate / 100;
    }
    public override void DisplayAccountInfo()
    {
        Console.WriteLine("Account Number: " + AccountNumber);
        Console.WriteLine("Account Holder's Name: " + AccountHolderName);
        Console.WriteLine("Balance: " + Balance);
    }
    public override void Withdraw(int amount)
    {
        Console.WriteLine("Withdrawal is not allowed from a savings account.");
    }
}
public class CheckingAccount : BankAccount
{
    public CheckingAccount(string accountnumber, string accountholdername, double balance) : base(accountnumber, accountholdername, balance)
    {  }
    public override void Withdraw(int amount)
    {
        if (amount > Balance)
        {
            Console.WriteLine("Insufficient balance. Cannot withdraw.");
        }
        else
        {
            Balance -= amount;
        }
    }
    public override void Deposit(int amount)
    {
        Balance += amount;
    }
    public override void DisplayAccountInfo()
    {
        Console.WriteLine("Account Number: " + AccountNumber);
        Console.WriteLine("Account Holder's Name: " + AccountHolderName);
        Console.WriteLine("Balance: " + Balance);
    }
}
public class Bank
{
    public List<BankAccount> Accounts { get; set; }

    public Bank()
    {
        Accounts = new List<BankAccount>();
    }

    public void AddAccount(BankAccount account)
    {
        Accounts.Add(account);
    }

    public void DepositToAccount(string accountNumber, int amount)
    {
        BankAccount account = FindAccount(accountNumber);
        if (account != null)
        {
            account.Deposit(amount);
        }
        else
        {
            Console.WriteLine("Account not found.");
        }
    }

    public void WithdrawFromAccount(string accountNumber, int amount)
    {
        BankAccount account = FindAccount(accountNumber);
        if (account != null)
        {
            account.Withdraw(amount);
        }
        else
        {
            Console.WriteLine("Account not found.");
        }
    }

    private BankAccount FindAccount(string accountNumber)
    {
        foreach (BankAccount account in Accounts)
        {
            if (account.GetAccountNumber() == accountNumber)
            {
                return account;
            }
        }
        return null;
    }
}
class Program
{
    static void Main(string[] args)
    {
        Bank bank = new Bank();

        // Create Savings Account
        SavingsAccount savingsaccount = new SavingsAccount("1001","Jan",50,5);
        // Create Checking Account
        CheckingAccount checkingaccount = new CheckingAccount("2001", "Feb", 100);

        // Add accounts to the bank
        bank.AddAccount(savingsaccount);
        bank.AddAccount(checkingaccount);

        // Perform transactions
        bank.DepositToAccount("1001", 500);
        bank.DepositToAccount("2001", 1000);
        bank.WithdrawFromAccount("2001", 800);

        // Display account information
        savingsaccount.DisplayAccountInfo();
        Console.WriteLine();
        checkingaccount.DisplayAccountInfo();

        Console.ReadKey();
    }
}
